type User {
  id: ID!
  name: String!
  email: String!
}

type Category {
  id: ID!
  name: String!
  slug: String!
  createdAt: String!
}

# Inputs
input CreateUserInput {
  name: String!
  email: String!
  password: String!
}

input AuthenticatedUserInput {
  email: String!
  password: String!
}

input UpdateUserInput {
  name: String
  email: String
  password: String
}

input CreateCategoryInput {
  name: String!
  slug: String!
  parent: String
}

input UpdateCategoryInput {
  id: ID!
  name: String!
  slug: String!
  parent: String
}

# Queries
type Query {
  users(term: String): [User!]!
  user(id: ID!): User
  me: User!

  categories: [Category!]!
  category(id: ID!): Category
}

# Mutations
type Mutation {
  createUser(input: CreateUserInput!): Boolean!
  authenticateUser(input: AuthenticatedUserInput!): String!
  updateUser(input: UpdateUserInput!): Boolean!
  deleteUser: Boolean!

  createCategory(input: CreateCategoryInput!): Boolean!
  updateCategory(input: UpdateCategoryInput!): Boolean!
  deleteCategory(id: ID!): Boolean!
}
